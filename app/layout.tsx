
import './globals.css';

import { ThemeProvider } from '@/components/theme-provider';
import { Toaster } from '@/components/ui/toaster';
import React from "react"; // Import React explicitly

import type { Metadata } from "next";
import { Inter } from "next/font/google";

import Header from "@/components/Header";
import { AbstractIntlMessages, NextIntlClientProvider, useMessages } from "next-intl";
import { getMessages } from "next-intl/server";
import { unstable_setRequestLocale } from 'next-intl/server';
import { AuthContextProvider } from "@/context/AuthContext";
const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
const locales = ['ar', 'en'];
export function generateStaticParams() {
  return locales.map((locale) => ({ locale }));
}
interface RootLayoutProps {
  children: React.ReactNode;
  params: { locale: string };
}

export default async function RootLayout({
  children,
  params: { locale }
}: Readonly<RootLayoutProps>) {
  const direction = locale === "ar" ? "rtl" : "ltr";
  // const messages = await getMessages();
  unstable_setRequestLocale(locale);

  return (
    <html lang={locale}>
      <head>
        <style>{`body { direction: ${direction}; }`}</style>
        <style>{`${inter.style}`}</style>
        <style>{`
        .ltr-component {
          direction: ltr !important; /* Force ltr direction */
          /* Add any other specific styles */
        }
      `}</style>
      </head>
      <body className={inter.className}>
        <ThemeProvider
          attribute="class"
          defaultTheme="dark"
          enableSystem
          disableTransitionOnChange
        >
          {/* <NextIntlClientProvider messages={messages}> */}
          {children}
          <Toaster />
          {/* </NextIntlClientProvider> */}
        </ThemeProvider>

      </body>
    </html>
  );

}
